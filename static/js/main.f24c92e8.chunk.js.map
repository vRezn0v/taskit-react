{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/Filter.js","App.js","index.js"],"names":["Form","props","updateInput","input","setState","submitHandler","e","preventDefault","state","newTask","text","completed","id","Math","random","addTodoHandler","onChange","target","value","type","className","this","onClick","Component","Todo","deleteHandler","setTodos","todos","filter","todo","completeHandler","temp","map","item","btnclass","TodoList","filteredList","Filter","setFilter","prevState","App","setInputText","inputText","ls","set","FILTER","tempList","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAuCeA,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CAACD,MAAOA,KARL,EAWnBE,cAAgB,SAAAC,GAEd,GADAA,EAAEC,iBACqB,KAAnB,EAAKC,MAAML,MAAW,CACxB,IAAIM,EAAU,CACZC,KAAM,EAAKF,MAAML,MACjBQ,WAAW,EACXC,GAAkB,IAAdC,KAAKC,UAEX,EAAKb,MAAMc,eAAeN,GAC1B,EAAKL,SAAS,CAACD,MAAO,OAlBxB,EAAKK,MAAQ,CACXL,MAAO,IAHQ,E,0CAwBnB,WAAU,IAAD,OACP,OACE,iCACE,uBAAOa,SAAU,SAAAV,GAAC,OAAE,EAAKJ,YAAYI,EAAEW,OAAOC,QAAQC,KAAK,OAAOC,UAAU,aAAaF,MAAOG,KAAKb,MAAML,QAC3G,wBAAQiB,UAAU,cAAcD,KAAK,SAASG,QAASD,KAAKhB,cAA5D,SACE,mBAAGe,UAAU,gC,GA9BJG,a,OCgCJC,E,4MA/BbC,cAAgB,WACd,EAAKxB,MAAMyB,SAAS,EAAKzB,MAAM0B,MAAMC,QAAO,SAAAtB,GAAC,OAAIA,EAAEM,KAAO,EAAKX,MAAM4B,KAAKjB,Q,EAG5EkB,gBAAkB,WAChB,IAAIC,EAAO,EAAK9B,MAAM0B,MAAMK,KAAI,SAAAC,GAC9B,OAAIA,EAAKrB,KAAO,EAAKX,MAAM4B,KAAKjB,GACvB,2BACFqB,GADL,IACWtB,WAAYsB,EAAKtB,YAEhBsB,KAEhB,EAAKhC,MAAMyB,SAASK,I,4CAGtB,WAAU,IACDF,EAAQR,KAAKpB,MAAb4B,KACHK,EAAYL,EAAKlB,UAAa,MAAO,MAEzC,OACE,sBAAKS,UAAU,OAAf,UACE,oBAAIA,UAAS,oBAAeS,EAAKlB,UAAU,YAAY,IAAvD,SACGkB,EAAKnB,OAER,wBAAQU,UAAU,eAAeE,QAASD,KAAKS,gBAA/C,SAAgE,mBAAGV,UAAS,UAAKc,EAAL,wBAC5E,wBAAQd,UAAU,YAAYE,QAASD,KAAKI,cAA5C,SAA2D,mBAAGL,UAAU,0B,GA1B7DG,aCuBJY,E,4JAhBb,WAAU,IAAD,OACP,OACE,qBAAKf,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SAEIC,KAAKpB,MAAMmC,aAAaJ,KAAI,SAAAH,GAAI,OAC9B,cAAC,EAAD,CAAoBA,KAAMA,EAAMH,SAAU,EAAKzB,MAAMyB,SAAUC,MAAO,EAAK1B,MAAM0B,OAAtEE,EAAKjB,e,GAZPW,a,gBCyBRc,E,kDAzBb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXoB,OAAQ,EAAK3B,MAAM2B,QAHJ,E,0CAanB,WAAU,IACAU,EAAcjB,KAAKpB,MAAnBqC,UACR,OACE,sBAAKlB,UAAU,SAAf,UACE,qBAAKE,QAAS,kBAAIgB,EAAU,SAASlB,UAA+B,SAApBC,KAAKb,MAAMoB,OAAgB,SAAS,GAApF,iBACA,qBAAKN,QAAS,kBAAIgB,EAAU,cAAclB,UAA+B,cAApBC,KAAKb,MAAMoB,OAAqB,SAAS,GAA9F,uBACA,qBAAKN,QAAS,kBAAIgB,EAAU,eAAelB,UAA+B,eAApBC,KAAKb,MAAMoB,OAAsB,SAAS,GAAhG,8B,uCAZN,SAAgC3B,EAAOsC,GACrC,MAAO,CACLX,OAAQ3B,EAAM2B,Y,GAVCL,aC2ENiB,E,kDAtEb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IAcRwC,aAAe,SAAC/B,GACd,EAAKN,SAAS,CACZsC,UAAWhC,KAjBI,EAqBnBgB,SAAW,SAACC,GACV,EAAKvB,SAAS,CACZuB,MAAOA,IACN,WACD,EAAKW,UAAU,EAAK9B,MAAMoB,QAC1Be,IAAGC,IAAI,QAAS,EAAKpC,MAAMmB,WA1BZ,EA8BnBW,UAAY,SAACO,GACX,EAAKzC,SAAS,CACZwB,OAAQiB,IAEV,WACE,IAAIC,EAAW,GACf,OAAQ,EAAKtC,MAAMoB,QACjB,IAAK,YACHkB,EAAW,EAAKtC,MAAMmB,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKlB,aAChD,MACF,IAAK,aACHmC,EAAW,EAAKtC,MAAMmB,MAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKlB,aACjD,MACF,QACEmC,EAAQ,YAAO,EAAKtC,MAAMmB,OAE9B,EAAKvB,SAAS,CACZgC,aAAcU,QA/CD,EAqDnB/B,eAAiB,SAACc,GACW,KAAvB,EAAKrB,MAAMkC,WACb,EAAKhB,SAAL,sBACM,EAAKlB,MAAMmB,OADjB,CACwBE,MAtD1B,EAAKrB,MAAQ,CACXmB,MAAO,GACPC,OAAQ,OACRQ,aAAc,IALC,E,qDAQnB,WACEf,KAAKjB,SAAS,CACZuB,MAAOgB,IAAGI,IAAI,UAAY,GAC1BX,aAAcO,IAAGI,IAAI,UAAY,O,oBAgDrC,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CAAML,eAAgBM,KAAKN,iBAC3B,cAAC,EAAD,CAAQa,OAAQP,KAAKb,MAAMoB,OAAQU,UAAWjB,KAAKiB,YACnD,cAAC,EAAD,CAAUX,MAAON,KAAKb,MAAMmB,MAAOS,aAAcf,KAAKb,MAAM4B,aAAcV,SAAUL,KAAKK,kB,GAjE/EH,aCAlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.f24c92e8.chunk.js","sourcesContent":["import {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\"\r\n    }\r\n  }\r\n\r\n  updateInput = input => {\r\n    this.setState({input: input})\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    if (this.state.input!==\"\"){\r\n      var newTask = {\r\n        text: this.state.input,\r\n        completed: false,\r\n        id: Math.random()*1000\r\n      }\r\n      this.props.addTodoHandler(newTask);\r\n      this.setState({input: \"\"})\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <form>\r\n        <input onChange={e=>this.updateInput(e.target.value)} type=\"text\" className=\"todo-input\" value={this.state.input} />\r\n        <button className=\"todo-button\" type=\"submit\" onClick={this.submitHandler}>\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Form;","import { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n  deleteHandler = () => {\r\n    this.props.setTodos(this.props.todos.filter(e => e.id !== this.props.todo.id));\r\n  }\r\n\r\n  completeHandler = () => {\r\n    var temp = this.props.todos.map(item => {\r\n      if (item.id === this.props.todo.id) {\r\n        return {\r\n          ...item, completed: !item.completed\r\n        }\r\n      } else return item;\r\n    });\r\n    this.props.setTodos(temp)\r\n  }\r\n\r\n  render() {\r\n    const {todo} = this.props;\r\n    var btnclass = (todo.completed) ? 'fas' :'far';\r\n\r\n    return (\r\n      <div className=\"todo\">\r\n        <li className={`todo-item ${todo.completed?\"completed\":''}`}>\r\n          {todo.text}\r\n        </li>\r\n        <button className=\"complete-btn\" onClick={this.completeHandler}><i className={`${btnclass} fa-check-square`}></i></button>\r\n        <button className=\"trash-btn\" onClick={this.deleteHandler}><i className=\"fas fa-trash\"></i></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Todo;","import { Component } from 'react';\r\nimport Todo from './Todo';\r\n\r\nclass TodoList extends Component {\r\n  /*static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      todos: props.todos\r\n    }\r\n  }*/\r\n  render() { \r\n    return (\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {\r\n            this.props.filteredList.map(todo => \r\n              <Todo key={todo.id} todo={todo} setTodos={this.props.setTodos} todos={this.props.todos} />\r\n            )\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TodoList;","import {Component} from 'react';\r\n\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filter: this.props.filter\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, prevState) {\r\n    return {\r\n      filter: props.filter\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { setFilter } = this.props;\r\n    return (\r\n      <div className=\"filter\">\r\n        <div onClick={()=>setFilter(\"NONE\")} className={this.state.filter===\"NONE\"?\"active\":\"\"}>All</div>\r\n        <div onClick={()=>setFilter(\"COMPLETED\")} className={this.state.filter===\"COMPLETED\"?\"active\":\"\"}>Completed</div>\r\n        <div onClick={()=>setFilter(\"INCOMPLETE\")} className={this.state.filter===\"INCOMPLETE\"?\"active\":\"\"}>Incomplete</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Filter;","import { Component } from 'react';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport ls from 'local-storage';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      filter: \"NONE\",\n      filteredList: []\n    }\n  }\n  componentDidMount() {\n    this.setState({\n      todos: ls.get('todos') || [],\n      filteredList: ls.get('todos') || []\n    })\n  }\n\n  setInputText = (text) => {\n    this.setState({\n      inputText: text\n    })\n  }\n\n  setTodos = (todos) => {\n    this.setState({\n      todos: todos\n    }, () => {\n      this.setFilter(this.state.filter)\n      ls.set('todos', this.state.todos)\n    })\n  }\n\n  setFilter = (FILTER) => {\n    this.setState({\n      filter: FILTER\n    }, \n    () => {\n      var tempList = []\n      switch (this.state.filter) {\n        case \"COMPLETED\":\n          tempList = this.state.todos.filter(todo => todo.completed)\n          break\n        case \"INCOMPLETE\":\n          tempList = this.state.todos.filter(todo => !todo.completed)\n          break\n        default:\n          tempList = [...this.state.todos]\n      }\n      this.setState({\n        filteredList: tempList\n      })\n    })\n    \n  }\n\n  addTodoHandler = (todo) => {\n    if (this.state.inputText!==\"\") {\n      this.setTodos(\n        [...this.state.todos, todo])\n      }\n  }\n  render() { \n    return (\n      <div className=\"App\">\n        <Form addTodoHandler={this.addTodoHandler} />\n        <Filter filter={this.state.filter} setFilter={this.setFilter} />\n        <TodoList todos={this.state.todos} filteredList={this.state.filteredList} setTodos={this.setTodos} />\n      </div>\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}