{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","components/Form.js","redux/actions/actions.js","components/Todo.js","components/TodoList.js","components/Filter.js","App.js","index.js"],"names":["ADD_TODO","DELETE_TODO","TOGGLE_STATE","SET_FILTER","todos","ls","get","undefined","initialState","filter","filteredList","filterList","state","tl","todo","completed","combineReducers","todosReducer","newState","action","type","payload","id","text","task","flist","set","temp","map","tempList","store","createStore","rootReducer","Form","props","updateInput","input","setState","submitHandler","e","preventDefault","addTodo","onChange","target","value","className","this","placeholder","onClick","Component","connect","dispatch","uuidv4","Todo","deleteHandler","deleteTodo","completeHandler","toggleTodo","btnclass","TodoList","Filter","setFilter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4823e199.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const TOGGLE_STATE = 'TOGGLE_STATE';\r\n\r\nexport const SET_FILTER = 'SET_FILTER';\r\n\r\nexport const STORE = 'STORE';","import { ADD_TODO, TOGGLE_STATE, DELETE_TODO, SET_FILTER } from '../actions/actionTypes';\r\nimport ls from 'local-storage';\r\n\r\nvar todos = ls.get('todos');\r\nif (todos===undefined||todos===null) todos = [];\r\n\r\nconst initialState = {\r\n  todos: todos,\r\n  filter: 'NONE',\r\n  filteredList: todos\r\n}\r\n\r\nconst filterList = (state) => {\r\n  var tl =(state.todos != null) ? state.todos : []\r\n  switch (state.filter) {\r\n    case \"COMPLETED\":\r\n      tl = tl.filter(todo => todo.completed)\r\n      break\r\n    case \"INCOMPLETE\":\r\n      tl = tl.filter(todo => !todo.completed)\r\n      break\r\n    default:\r\n      tl = [...tl]\r\n  }\r\n  return tl\r\n}\r\n\r\nexport default function todosReducer(state = initialState, action) {\r\n  var newState\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      const {id, text} = action.payload\r\n      var task ={\r\n        id: id,\r\n        text: text,\r\n        completed: false\r\n      }\r\n\r\n      newState = {\r\n        ...state,\r\n        todos: [...state.todos, task]\r\n      }\r\n\r\n      var flist = filterList(newState)\r\n      newState.filteredList = flist;\r\n\r\n      ls.set('todos', newState.todos)\r\n      return newState;\r\n    } \r\n    case DELETE_TODO: {\r\n      const { id } = action.payload\r\n      newState = {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id!==id)\r\n      }\r\n\r\n      flist = filterList(newState)\r\n      newState.filteredList = flist;\r\n\r\n      ls.set('todos', newState.todos)\r\n      return newState\r\n    }\r\n    case TOGGLE_STATE: {\r\n      const { id } = action.payload\r\n      var temp = state.todos.map(todo => (todo.id===id)?{...todo,completed:!todo.completed}:todo )\r\n      newState = {\r\n        ...state,\r\n        todos: temp\r\n      }\r\n\r\n      flist = filterList(newState)\r\n      newState.filteredList = flist;\r\n\r\n      ls.set('todos', newState.todos)\r\n      return newState\r\n    }\r\n    case SET_FILTER: {\r\n      const { filter } = action.payload\r\n      var tempList = (state.todos != null) ? state.todos : []\r\n      switch (filter) {\r\n        case \"COMPLETED\":\r\n          tempList = tempList.filter(todo => todo.completed)\r\n          break\r\n        case \"INCOMPLETE\":\r\n          tempList = tempList.filter(todo => !todo.completed)\r\n          break\r\n        default:\r\n          tempList = [...tempList]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        filter: filter,\r\n        filteredList: tempList\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport todosReducer from './todos';\r\n\r\nexport default combineReducers({todosReducer});","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import {Component} from 'react';\r\nimport { addTodo } from '../redux/actions/actions'\r\nimport { connect } from 'react-redux'\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\"\r\n    }\r\n  }\r\n\r\n  updateInput = input => {\r\n    this.setState({input: input})\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    if (this.state.input!==\"\"){\r\n      this.props.addTodo(this.state.input);\r\n      this.setState({input: \"\"})\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <form>\r\n        <input onChange={e=>this.updateInput(e.target.value)} type=\"text\" className=\"todo-input\" value={this.state.input} placeholder=\"Add a task...\" />\r\n        <button className=\"todo-button\" type=\"submit\" onClick={this.submitHandler}>\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTodo: text => dispatch(addTodo(text))\r\n  }\r\n}\r\n\r\n \r\nexport default connect(null, mapDispatchToProps)(Form);","import { ADD_TODO, TOGGLE_STATE, DELETE_TODO, SET_FILTER } from './actionTypes';\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nexport const addTodo = text => ({\r\n  type: ADD_TODO,\r\n  payload: {\r\n    id: uuidv4(),\r\n    text: text\r\n  }\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: TOGGLE_STATE,\r\n  payload: { id }\r\n})\r\n\r\nexport const deleteTodo = id => ({\r\n  type: DELETE_TODO,\r\n  payload: { id }\r\n})\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  payload: { filter }\r\n})","import { Component } from 'react';\r\nimport { toggleTodo, deleteTodo } from '../redux/actions/actions'\r\nimport { connect } from 'react-redux'\r\nclass Todo extends Component {\r\n  deleteHandler = () => {\r\n    this.props.deleteTodo(this.props.todo.id)\r\n  }\r\n\r\n  completeHandler = () => {\r\n    this.props.toggleTodo(this.props.todo.id)\r\n  }\r\n\r\n  render() {\r\n    const {todo} = this.props;\r\n    var btnclass = (todo.completed) ? 'fas' :'far';\r\n\r\n    return (\r\n      <div className={`todo ${todo.completed?\"completed\":''}`}>\r\n        <li className=\"todo-item\">\r\n          {todo.text}\r\n        </li>\r\n        <div className=\"actions\">\r\n          <button className=\"complete-btn\" onClick={this.completeHandler}><i className={`${btnclass} fa-check-square`}></i></button>\r\n          <button className=\"trash-btn\" onClick={this.deleteHandler}><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleTodo: id => dispatch(toggleTodo(id)),\r\n    deleteTodo: id => dispatch(deleteTodo(id))\r\n  }\r\n}\r\n \r\nexport default connect(null, mapDispatchToProps)(Todo);","import { Component } from 'react';\r\nimport Todo from './Todo';\r\nimport { connect } from 'react-redux'\r\nclass TodoList extends Component {\r\n  render() { \r\n    return (\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {\r\n            (this.props.todos) ?this.props.todos.map(todo => \r\n              <Todo key={todo.id} todo={todo} />\r\n            ) : ''\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todosReducer.filteredList\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TodoList);","import {Component} from 'react';\r\nimport { setFilter } from '../redux/actions/actions'\r\nimport { connect } from 'react-redux'\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filter: this.props.filter\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props,state) {\r\n    return {\r\n      filter: props.filter\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"filter\">\r\n        <div onClick={()=>this.props.setFilter(\"NONE\")} className={this.state.filter===\"NONE\"?\"active\":\"\"}>All</div>\r\n        <div onClick={()=>this.props.setFilter(\"COMPLETED\")} className={this.state.filter===\"COMPLETED\"?\"active\":\"\"}>Completed</div>\r\n        <div onClick={()=>this.props.setFilter(\"INCOMPLETE\")} className={this.state.filter===\"INCOMPLETE\"?\"active\":\"\"}>Incomplete</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.todosReducer.filter\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: filter => dispatch(setFilter(filter))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","import { Component } from 'react';\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n      filter: \"NONE\",\r\n      filteredList: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      todos: ls.get('todos') || [],\r\n      filteredList: ls.get('todos') || []\r\n    })\r\n  }\r\n\r\n  setInputText = (text) => {\r\n    this.setState({\r\n      inputText: text\r\n    })\r\n  }\r\n\r\n  setTodos = (todos) => {\r\n    this.setState({\r\n      todos: todos\r\n    }, () => {\r\n      this.setFilter(this.state.filter)\r\n      ls.set('todos', this.state.todos)\r\n    })\r\n  }\r\n\r\n  setFilter = (FILTER) => {\r\n    this.setState({\r\n      filter: FILTER\r\n    }, \r\n    () => {\r\n      var tempList = []\r\n      switch (this.state.filter) {\r\n        case \"COMPLETED\":\r\n          tempList = this.state.todos.filter(todo => todo.completed)\r\n          break\r\n        case \"INCOMPLETE\":\r\n          tempList = this.state.todos.filter(todo => !todo.completed)\r\n          break\r\n        default:\r\n          tempList = [...this.state.todos]\r\n      }\r\n      this.setState({\r\n        filteredList: tempList\r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n  addTodoHandler = (todo) => {\r\n    if (this.state.inputText!==\"\") {\r\n      this.setTodos(\r\n        [...this.state.todos, todo])\r\n      }\r\n  }*/\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"header\">\r\n          <h1>TaskIt</h1>\r\n          <Form />\r\n          <Filter />\r\n        </div>\r\n        <TodoList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}